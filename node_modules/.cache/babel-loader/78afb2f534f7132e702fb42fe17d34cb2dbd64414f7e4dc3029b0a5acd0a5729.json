{"ast":null,"code":"import axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport { getAccessToken, getRefreshToken } from \"../hooks/user.action\";\nconst axiosService = axios.create({\n  baseURL: \"https://localhost:8000\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\naxiosService.interceptors.request.use(async config => {\n  /**\n    * Retrieving the access token from the localStorage and adding it to the headers of the request\n  */\n\n  config.headers.Authorization = `Bearer ${getAccessToken()}`;\n  return config;\n});\naxiosService.interceptors.response.use(res => Promise.resolve(res), err => Promise.reject(err));\nconst refreshAuthLogic = async failedRequest => {\n  return axios.post(\"/refresh/token/\", null, {\n    baseURL: \"https://localhost:8000\",\n    headers: {\n      Authorization: `Bearer ${getRefreshToken()}`\n    }\n  }).then(resp => {\n    const {\n      access,\n      refresh,\n      user\n    } = resp.data;\n    failedRequest.response.config.headers[\"Authorization\"] = \"Bearer \" + access;\n    localStorage.setItem(\"auth\", JSON.stringify({\n      access,\n      refresh,\n      user\n    }));\n  }).catch(() => {\n    localStorage.removeItem(\"auth\");\n  });\n};\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic);\nexport function fetcher(url) {\n  return axiosService.get(url).then(res => res.data);\n}\nexport default axiosService;","map":{"version":3,"names":["axios","createAuthRefreshInterceptor","getAccessToken","getRefreshToken","axiosService","create","baseURL","headers","interceptors","request","use","config","Authorization","response","res","Promise","resolve","err","reject","refreshAuthLogic","failedRequest","post","then","resp","access","refresh","user","data","localStorage","setItem","JSON","stringify","catch","removeItem","fetcher","url","get"],"sources":["/Users/yashrajsingh/Django App/momento/src/helpers/axios.js"],"sourcesContent":["import axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport {\n  getAccessToken,\n  getRefreshToken,\n} from \"../hooks/user.action\";\n\nconst axiosService = axios.create({\n  baseURL: \"https://localhost:8000\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\naxiosService.interceptors.request.use(async (config) => {\n  /**\n    * Retrieving the access token from the localStorage and adding it to the headers of the request\n  */\n\n  config.headers.Authorization = `Bearer ${getAccessToken()}`;\n  return config;\n});\n\naxiosService.interceptors.response.use(\n  (res) => Promise.resolve(res),\n  (err) => Promise.reject(err)\n);\n\nconst refreshAuthLogic = async (failedRequest) => {\n\n    return axios\n        .post(\"/refresh/token/\", null, {\n            baseURL: \"https://localhost:8000\",\n            headers: {\n                Authorization: `Bearer ${getRefreshToken()}`,\n            },\n        })\n        .then((resp) => {\n            const { access, refresh, user } = resp.data;\n            failedRequest.response.config.headers[\"Authorization\"] = \"Bearer \" + access;\n            localStorage.setItem(\"auth\", JSON.stringify({access, refresh, user }));\n        })\n        .catch(() => {\n            localStorage.removeItem(\"auth\");\n        });\n};\n\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic);\n\nexport function fetcher(url) {\n  return axiosService.get(url).then((res) => res.data);\n}\n\nexport default axiosService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,4BAA4B,MAAM,oBAAoB;AAC7D,SACEC,cAAc,EACdC,eAAe,QACV,sBAAsB;AAE7B,MAAMC,YAAY,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAChCC,OAAO,EAAE,wBAAwB;EACjCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFH,YAAY,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;EACtD;AACF;AACA;;EAEEA,MAAM,CAACJ,OAAO,CAACK,aAAa,GAAG,UAAUV,cAAc,CAAC,CAAC,EAAE;EAC3D,OAAOS,MAAM;AACf,CAAC,CAAC;AAEFP,YAAY,CAACI,YAAY,CAACK,QAAQ,CAACH,GAAG,CACnCI,GAAG,IAAKC,OAAO,CAACC,OAAO,CAACF,GAAG,CAAC,EAC5BG,GAAG,IAAKF,OAAO,CAACG,MAAM,CAACD,GAAG,CAC7B,CAAC;AAED,MAAME,gBAAgB,GAAG,MAAOC,aAAa,IAAK;EAE9C,OAAOpB,KAAK,CACPqB,IAAI,CAAC,iBAAiB,EAAE,IAAI,EAAE;IAC3Bf,OAAO,EAAE,wBAAwB;IACjCC,OAAO,EAAE;MACLK,aAAa,EAAE,UAAUT,eAAe,CAAC,CAAC;IAC9C;EACJ,CAAC,CAAC,CACDmB,IAAI,CAAEC,IAAI,IAAK;IACZ,MAAM;MAAEC,MAAM;MAAEC,OAAO;MAAEC;IAAK,CAAC,GAAGH,IAAI,CAACI,IAAI;IAC3CP,aAAa,CAACP,QAAQ,CAACF,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGiB,MAAM;IAC3EI,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,MAAM;MAAEC,OAAO;MAAEC;IAAK,CAAC,CAAC,CAAC;EAC1E,CAAC,CAAC,CACDM,KAAK,CAAC,MAAM;IACTJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACnC,CAAC,CAAC;AACV,CAAC;AAEDhC,4BAA4B,CAACG,YAAY,EAAEe,gBAAgB,CAAC;AAE5D,OAAO,SAASe,OAAOA,CAACC,GAAG,EAAE;EAC3B,OAAO/B,YAAY,CAACgC,GAAG,CAACD,GAAG,CAAC,CAACb,IAAI,CAAER,GAAG,IAAKA,GAAG,CAACa,IAAI,CAAC;AACtD;AAEA,eAAevB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}