{"ast":null,"code":"import axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nconst axiosService = axios.create({\n  baseURL: \"http://localhost:8000\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\naxiosService.interceptors.request.use(async config => {\n  /**\n    * Retrieving the access token from the localStorage and adding it to the headers of the request\n  */\n  const {\n    access\n  } = JSON.parse(localStorage.getItem(\"auth\"));\n  config.headers.Authorization = `Bearer ${access}`;\n  return config;\n});\naxiosService.interceptors.response.use(res => Promise.resolve(res), err => Promise.reject(err));\nconst refreshAuthLogic = async failedRequest => {\n  const {\n    refresh\n  } = JSON.parse(localStorage.getItem(\"auth\"));\n  return axios.post(\"/refresh/token/\", null, {\n    baseURL: \"http://localhost:8000\",\n    headers: {\n      Authorization: `Bearer ${refresh}`\n    }\n  }).then(resp => {\n    const {\n      access,\n      refresh\n    } = resp.data;\n    failedRequest.response.config.headers[\"Authorization\"] = \"Bearer \" + access;\n    localStorage.setItem(\"auth\", JSON.stringify({\n      access,\n      refresh\n    }));\n  }).catch(() => {\n    localStorage.removeItem(\"auth\");\n  });\n};\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic);\nexport function fetcher(url) {\n  return axiosService.get(url).then(res => res.data);\n}\nexport default axiosService;","map":{"version":3,"names":["axios","createAuthRefreshInterceptor","axiosService","create","baseURL","headers","interceptors","request","use","config","access","JSON","parse","localStorage","getItem","Authorization","response","res","Promise","resolve","err","reject","refreshAuthLogic","failedRequest","refresh","post","then","resp","data","setItem","stringify","catch","removeItem","fetcher","url","get"],"sources":["/Users/yashrajsingh/Django App/momento/src/helpers/axios.js"],"sourcesContent":["import axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\n\nconst axiosService = axios.create({\n  baseURL: \"http://localhost:8000\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\naxiosService.interceptors.request.use(async (config) => {\n  /**\n    * Retrieving the access token from the localStorage and adding it to the headers of the request\n  */\n  const { access } = JSON.parse(localStorage.getItem(\"auth\"));\n  config.headers.Authorization = `Bearer ${access}`;\n  return config;\n});\n\naxiosService.interceptors.response.use(\n  (res) => Promise.resolve(res),\n  (err) => Promise.reject(err)\n);\n\nconst refreshAuthLogic = async (failedRequest) => {\n    const { refresh } = JSON.parse(localStorage.getItem(\"auth\"));\n    return axios\n        .post(\"/refresh/token/\", null, {\n            baseURL: \"http://localhost:8000\",\n            headers: {\n                Authorization: `Bearer ${refresh}`,\n            },\n        })\n        .then((resp) => {\n            const { access, refresh } = resp.data;\n            failedRequest.response.config.headers[\"Authorization\"] = \"Bearer \" + access;\n            localStorage.setItem(\"auth\", JSON.stringify({access, refresh }));\n        })\n        .catch(() => {\n            localStorage.removeItem(\"auth\");\n        });\n};\n\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic);\n\nexport function fetcher(url) {\n  return axiosService.get(url).then((res) => res.data);\n}\n\nexport default axiosService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,4BAA4B,MAAM,oBAAoB;AAE7D,MAAMC,YAAY,GAAGF,KAAK,CAACG,MAAM,CAAC;EAChCC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFH,YAAY,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;EACtD;AACF;AACA;EACE,MAAM;IAAEC;EAAO,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAC3DL,MAAM,CAACJ,OAAO,CAACU,aAAa,GAAG,UAAUL,MAAM,EAAE;EACjD,OAAOD,MAAM;AACf,CAAC,CAAC;AAEFP,YAAY,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CACnCS,GAAG,IAAKC,OAAO,CAACC,OAAO,CAACF,GAAG,CAAC,EAC5BG,GAAG,IAAKF,OAAO,CAACG,MAAM,CAACD,GAAG,CAC7B,CAAC;AAED,MAAME,gBAAgB,GAAG,MAAOC,aAAa,IAAK;EAC9C,MAAM;IAAEC;EAAQ,CAAC,GAAGb,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAC5D,OAAOd,KAAK,CACPyB,IAAI,CAAC,iBAAiB,EAAE,IAAI,EAAE;IAC3BrB,OAAO,EAAE,uBAAuB;IAChCC,OAAO,EAAE;MACLU,aAAa,EAAE,UAAUS,OAAO;IACpC;EACJ,CAAC,CAAC,CACDE,IAAI,CAAEC,IAAI,IAAK;IACZ,MAAM;MAAEjB,MAAM;MAAEc;IAAQ,CAAC,GAAGG,IAAI,CAACC,IAAI;IACrCL,aAAa,CAACP,QAAQ,CAACP,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGK,MAAM;IAC3EG,YAAY,CAACgB,OAAO,CAAC,MAAM,EAAElB,IAAI,CAACmB,SAAS,CAAC;MAACpB,MAAM;MAAEc;IAAQ,CAAC,CAAC,CAAC;EACpE,CAAC,CAAC,CACDO,KAAK,CAAC,MAAM;IACTlB,YAAY,CAACmB,UAAU,CAAC,MAAM,CAAC;EACnC,CAAC,CAAC;AACV,CAAC;AAED/B,4BAA4B,CAACC,YAAY,EAAEoB,gBAAgB,CAAC;AAE5D,OAAO,SAASW,OAAOA,CAACC,GAAG,EAAE;EAC3B,OAAOhC,YAAY,CAACiC,GAAG,CAACD,GAAG,CAAC,CAACR,IAAI,CAAET,GAAG,IAAKA,GAAG,CAACW,IAAI,CAAC;AACtD;AAEA,eAAe1B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}